% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{observeWrapper}
\alias{observeWrapper}
\title{wrapper over observe that works similar to \code{shiny::observeEvent}}
\usage{
observeWrapper(
  eventExpr,
  handlerExpr,
  event.env = parent.frame(),
  handler.env = parent.frame(),
  ignoreNULL = TRUE,
  exitHandler = NULL,
  once = FALSE,
  debounceMillis = NULL
)
}
\arguments{
\item{eventExpr}{- reactive expression}

\item{handlerExpr}{- expression that react to reactive expression}

\item{event.env}{- environment used for reactive expression}

\item{handler.env}{- environment used for handler expression}

\item{ignoreNULL}{- if set to TRUE it will not invoke the handler if reactive
value is NULL}

\item{exitHandler}{- additional function that will be called if once is set}

\item{once}{- if set to TRUE it will invoke the handler once nad destroy observer}

\item{debounceMillis}{- if not NULL it will use the value as time for \code{shiny::debounce}}
}
\description{
wrapper over observe that works similar to \code{shiny::observeEvent}
}
